#!/usr/bin/env bash

backup_commit() {
    echo "Saving notes through git"
    full_date=$(date -I)
    $(git --git-dir $HOME/Notes/.git --work-tree=$HOME/Notes add .)
    $(git --git-dir $HOME/Notes/.git --work-tree=$HOME/Notes commit -m "Notes update $full_date")
    $(git --git-dir $HOME/Notes/.git --work-tree=$HOME/Notes push)
}

backup_local() {
    echo "Saving notes to the usb drive"
    dir_integer=1
    backup_dir=$(get_backup_dir -$dir_integer)
    while [ -d $backup_dir ];
    do
        let dir_integer++
        backup_dir=$(get_backup_dir -$dir_integer)
    done
    echo "Saving on $backup_dir"
    cp -r $HOME/Notes/ $backup_dir
}

get_backup_dir() {
    full_date=$(date +%Y%m%d)$1
    echo $HOME/usb-drive/notes-backup/$full_date
}



# Check if the Notes folder exists in Home
if [ ! -d $HOME/Notes ]; then
    echo "Did not found the Notes folder inside $HOME"
    exit 1
fi

# Check if the usb folder exists in Home
backup_folder_exists=true
if [ ! -d $HOME/usb-drive ]; then
    echo "Did not found the usb-drive folder inside $HOME"
    backup_folder_exists=false
fi

# Check if the notes-backup folder exists
if [ ! -d $HOME/usb-drive/notes-backup ]; then
    echo "Did not found the notes-backup folder inside $HOME/usb-drive"
    backup_folder_exists=false
fi

# If the backup folder does not exist, check to proceed with git
if [ $backup_folder_exists = false ]; then
    proceed=n
    read -p "Proceed with commit? (y/n) " proceed
    if [ $proceed != "y" ] && [ $proceed != "Y" ] ; then
        echo "Canceling. No backups made"
        exit 0
    fi
    backup_commit
else
    backup_local
    backup_commit
fi



#echo "reached end of file"
